# Generated by Django 5.2.2 on 2025-10-28 21:00

from django.db import migrations, models
from cryptography.fernet import Fernet


def encrypt_existing_passwords(apps, schema_editor):
    """
    Encrypt all existing plain text passwords.
    This is a one-time migration to secure existing data.
    """
    from django.conf import settings

    FacebookAccount = apps.get_model('accounts', 'FacebookAccount')

    # Get encryption key
    key = settings.FACEBOOK_PASSWORD_ENCRYPTION_KEY.encode()
    cipher = Fernet(key)

    # Encrypt all existing passwords
    count = 0
    for account in FacebookAccount.objects.all():
        if hasattr(account, 'password') and account.password:
            # Encrypt the plain text password
            encrypted = cipher.encrypt(account.password.encode()).decode()
            account.encrypted_password = encrypted
            account.save()
            count += 1

    print(f"✅ Encrypted {count} passwords")


def decrypt_passwords(apps, schema_editor):
    """
    Reverse migration: decrypt passwords back to plain text.
    (For rollback purposes only)
    """
    from django.conf import settings

    FacebookAccount = apps.get_model('accounts', 'FacebookAccount')

    # Get encryption key
    key = settings.FACEBOOK_PASSWORD_ENCRYPTION_KEY.encode()
    cipher = Fernet(key)

    # Decrypt all passwords
    count = 0
    for account in FacebookAccount.objects.all():
        if hasattr(account, 'encrypted_password') and account.encrypted_password:
            # Decrypt back to plain text
            decrypted = cipher.decrypt(
                account.encrypted_password.encode()).decode()
            account.password = decrypted
            account.save()
            count += 1

    print(f"✅ Decrypted {count} passwords")


class Migration(migrations.Migration):

    dependencies = [
        ('accounts', '0001_initial'),
    ]

    operations = [
        # Step 1: Add encrypted_password field (nullable temporarily)
        migrations.AddField(
            model_name='facebookaccount',
            name='encrypted_password',
            field=models.TextField(null=True, blank=True),
        ),
        # Step 2: Encrypt existing passwords
        migrations.RunPython(encrypt_existing_passwords, decrypt_passwords),
        # Step 3: Make encrypted_password required
        migrations.AlterField(
            model_name='facebookaccount',
            name='encrypted_password',
            field=models.TextField(),
        ),
        # Step 4: Remove old password field
        migrations.RemoveField(
            model_name='facebookaccount',
            name='password',
        ),
    ]
